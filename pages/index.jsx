import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {Auth, Amplify, API, withSSRContext} from "aws-amplify";
import {useEffect, useState} from 'react';

import awsExports from "../src/aws-exports";

// Amplify.configure({ ...awsExports, ssr: true });


export const getServerSideProps = async ({params, req}) => {
    console.log("getServerSideProps....")
    const {Auth} = withSSRContext({req});
    Auth.configure({
        ...awsExports
    });

    try {
        const user = await Auth.currentAuthenticatedUser();
        console.log(user)
        return {
            props: {
                user: JSON.parse(JSON.stringify(user)),
                error: false,
                message: JSON.parse(JSON.stringify('Read user from SSR getServerSideProps method'))
            }
        }
    } catch (error) {
        console.log(error)
        return {
            props: {
                error: true,
                message: JSON.parse(JSON.stringify(error))
            }
        };
    }
}


export default function Home({message, error}) {

    const [user, setUser] = useState({})

    function signUp() {
        Auth.signUp({
            username: "mgngm@amazon.com",
            password: "Tswalano@42",
            attributes: {
                email: "mgngm@amazon.com"
            }
        }).then(u => console.log(u)).catch(err => console.error(err))
    }

    async function signIn() {
        try {
            const u = await Auth.signIn("mgngm@amazon.com", "Tswalano@42");
            console.log("current user", u);
        } catch (error) {
            console.log('error signing in', error);
        }
    }

    async function signOut() {
        try {
            await Auth.signOut({global: true});
        } catch (error) {
            console.log('error signing out: ', error);
        }
    }

    useEffect(() => { // currentAuthenticatedUser
        Auth.currentAuthenticatedUser().then((u) => {
            if (u && u.attributes) {
                setUser(u.attributes)
            }
        }).catch(err => console.log(err))
    }, [])

    return (
        <div className={
            styles.container
        }>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className={
                styles.main
            }>
                <h1 className={
                    styles.title
                }>
                    Welcome to
                    <a href="https://nextjs.org">Next.js!</a>
                </h1>

                <p className={
                    styles.description
                }>
                    {
                    user && user.sub ? (
                        <code className={
                            styles.code
                        }>Welcome, {
                            user.email
                        }</code>
                    ) : (
                        <code className={
                            styles.code
                        }>Please log in</code>
                    )
                }
                    <br></br>
                    <span> {message} </span>
                </p>

                <div className={
                    styles.grid
                }>
                    <button className={
                            styles.card
                        }
                        onClick={
                            () => signUp()
                    }>
                        <h2>SignUp</h2>
                    </button>

                    <button className={
                            styles.card
                        }
                        onClick={
                            () => signIn()
                    }>
                        <h2>SignIn</h2>
                    </button>
                    <button className={
                            styles.card
                        }
                        onClick={
                            () => signOut()
                    }>
                        <h2>SignOut</h2>
                    </button>
                </div>
            </main>

            <footer className={
                styles.footer
            }>
                <a href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app" target="_blank" rel="noopener noreferrer">
                    Powered by{' '}
                    <span className={
                        styles.logo
                    }>
                        <Image src="/vercel.svg" alt="Vercel Logo"
                            width={72}
                            height={16}/>
                    </span>
                </a>
            </footer>
        </div>
    )
}
